name: Update site-data.json from Issue

on:
  issues:
    types: [opened, edited, labeled]
  workflow_dispatch: {}

permissions:
  contents: write
  issues: write

jobs:
  update:
    # ✅ Run if:
    #  - manual trigger, OR
    #  - issue has "auto-update" label, OR
    #  - title contains "US-SITE-DATA update"
    if: >
      github.event_name == 'workflow_dispatch' ||
      contains(join(fromJson(toJson(github.event.issue.labels)).*.name, ','), 'auto-update') ||
      contains(github.event.issue.title, 'US-SITE-DATA update')
    runs-on: ubuntu-latest
    steps:
      - name: Debug trigger context (optional)
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Title: ${{ github.event.issue.title }}"
          echo "Labels: ${{ toJson(github.event.issue.labels) }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure we can commit cleanly

      - name: Decode payload from issue body
        id: decode
        if: ${{ github.event_name != 'workflow_dispatch' }}
        shell: bash
        run: |
          BODY=$(jq -r '.issue.body' "$GITHUB_EVENT_PATH")
          if [ -z "$BODY" ] || [ "$BODY" = "null" ]; then
            echo "No base64 body found on the issue." >&2
            exit 1
          fi

          # Decode to a temp file
          echo "$BODY" | base64 --decode > content/site-data.json.tmp

          # Validate JSON (pretty print to ensure stable formatting)
          jq . content/site-data.json.tmp > content/site-data.json || {
            echo "Invalid JSON payload." >&2
            exit 1
          }

          echo "decoded=true" >> "$GITHUB_OUTPUT"

      # Allow manual runs even without an issue body
      - name: Ensure file exists for manual run
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          test -f content/site-data.json || echo '{}' > content/site-data.json

      - name: Commit & push
        id: commit
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add content/site-data.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            echo "no_change=true" >> "$GITHUB_OUTPUT"
          else
            git commit -m "Update site-data.json from ${{
              github.event_name == 'workflow_dispatch' && 'manual run' || format('issue #{0}', github.event.issue.number)
            }}"
            git push
            echo "no_change=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment result
        if: ${{ github.event_name != 'workflow_dispatch' }}
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          API="https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
          if [ "${{ steps.commit.outputs.no_change }}" = "true" ]; then
            MSG="ℹ️ site-data.json already up to date."
          else
            MSG="✅ site-data.json updated!"
          fi
          curl -sS -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
            -d "{\"body\":\"$MSG\"}" "$API" >/dev/null

      # Optional: auto-close the issue on success (skip for manual runs)
      - name: Close issue (optional)
        if: success() && github.event_name != 'workflow_dispatch'
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -sS -X PATCH \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d '{"state":"closed"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}"

